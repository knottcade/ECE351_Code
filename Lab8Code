# -*- coding: utf-8 -*-
"""
Created on Tue Oct 22 19:13:12 2019

@author: Cade Knott
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.signal as sig
plt.rcParams.update({'font.size': 14}) # set font size in plots
steps = 1e-3
t = np.arange(0,20+steps,steps)
T = 8
y = 0
N = [1, 3, 15, 50, 150, 1500]

def ak(k):
    y = 0
    if k == 0:
        return y
    else:
        y = (2/(k*np.pi))*np.sin(k*np.pi)
    return y

def bk(k):
    y = (2/(k*np.pi))*(1-np.cos(k*np.pi))
    return y

print('a_k(0) = ', ak(0))
print('a_k(1) = ', ak(1))
print('b_k(1) = ', bk(1))
print('b_k(2) = ', bk(2))
print('b_k(3) = ', bk(3))

for h in [1,2]: #figure numbers
    for i in ([1 + (h - 1)*3, 2 + (h - 1)*3, 3 + (h - 1)*3]): #subplots
        for k in np.arange(1, N[i - 1] + 1):                  #fourier
            b = 2/(k*np.pi)*(1 - np.cos(k*np.pi))
            x = b*np.sin(k*(2*np.pi/T)*t)
            y += x
        plt.figure(h, figsize=(12,8))
        plt.subplot(3,1,(i-1)%3+1)
        plt.plot(t,y)
        plt.grid()
        plt.ylabel('N = %i' %N[i-1])
        if i == 1 or i == 4:
            plt.title('Fourier Series')
        if i == 3 or i == 6:
            plt.xlabel('t[s]')
            plt.show()
        y = 0
        
